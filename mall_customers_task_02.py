# -*- coding: utf-8 -*-
"""Mall Customers_Task-02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qJhcCRYpNbw4hG3HDVvlNS1RiXnBa1xH

#Import important libraries
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

"""#Load the dataset"""

data = pd.read_csv('/content/Mall_Customers.csv')

data.head()

"""#Selecting the features for clustering"""

features = data[['Annual Income (k$)', 'Spending Score (1-100)']]

"""#Standardizing the features"""

scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

"""#Using the Elbow method to find the optimal number of clusters"""

inertia = []
k_range = range(1, 11)

for k in k_range:
  kmeans = KMeans(n_clusters = k, random_state=42)
  kmeans.fit(scaled_features)
  inertia.append(kmeans.inertia_)

"""#Plotting the Elbow method graph"""

plt.figure(figsize=(8, 5))
plt.plot(k_range, inertia, 'bo-', markersize=8)
plt.xlabel('Number of clusters (k)')
plt.ylabel('Inertia')
plt.title('Elbow Method for Optimal k')
plt.show()

"""#Applying K-means clustering with k = 5"""

kmeans = KMeans(n_clusters=5, random_state=42)
clusters = kmeans.fit_predict(scaled_features)

"""#Adding the cluster labels to the original data"""

data['Cluster'] = clusters

"""#Plotting the clusters"""

plt.figure(figsize=(10, 7))
plt.scatter(scaled_features[:, 0], scaled_features[:, 1], c=clusters, cmap='viridis', marker='o', edgecolor='k', s=100)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='red', label='Centroids', marker='X')
plt.xlabel('Annual Income (scaled)')
plt.ylabel('Spending Score (scaled)')
plt.title('Customer Segments')
plt.legend()
plt.show()

"""#Display the first few rows with cluster assignments"""

data.head()